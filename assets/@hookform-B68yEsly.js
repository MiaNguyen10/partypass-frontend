import{g as e,s as t,a as r}from"./react-hook-form-fRayFuR3.js";const s=(t,r,s)=>{if(t&&"reportValidity"in t){const o=e(s,r);t.setCustomValidity(o&&o.message||""),t.reportValidity()}},o=(e,t)=>{for(const r in t.fields){const o=t.fields[r];o&&o.ref&&"reportValidity"in o.ref?s(o.ref,r,e):o.refs&&o.refs.forEach((t=>s(t,r,e)))}},n=(r,s)=>{s.shouldUseNativeValidation&&o(r,s);const n={};for(const o in r){const i=e(s.fields,o),c=Object.assign(r[o]||{},{ref:i&&i.ref});if(a(s.names||Object.keys(r),o)){const r=Object.assign({},e(n,o));t(r,"root",c),t(n,o,r)}else t(n,o,c)}return n},a=(e,t)=>e.some((e=>e.startsWith(t+".")));function i(e,t,s){return void 0===t&&(t={}),void 0===s&&(s={}),function(a,i,c){try{return Promise.resolve(function(r,n){try{var f=(t.context,Promise.resolve(e["sync"===s.mode?"validateSync":"validate"](a,Object.assign({abortEarly:!1},t,{context:i}))).then((function(e){return c.shouldUseNativeValidation&&o({},c),{values:s.raw?a:e,errors:{}}})))}catch(l){return n(l)}return f&&f.then?f.then(void 0,n):f}(0,(function(e){if(!e.inner)throw e;return{values:{},errors:n((t=e,s=!c.shouldUseNativeValidation&&"all"===c.criteriaMode,(t.inner||[]).reduce((function(e,t){if(e[t.path]||(e[t.path]={message:t.message,type:t.type}),s){var o=e[t.path].types,n=o&&o[t.type];e[t.path]=r(t.path,s,e,t.type,n?[].concat(n,t.message):t.message)}return e}),{})),c)};var t,s})))}catch(f){return Promise.reject(f)}}}export{i as o};
